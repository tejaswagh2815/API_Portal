const express = require('express');
const { Sequelize } = require('sequelize');
const jwt = require('jsonwebtoken');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

const sequelize = new Sequelize('user_registration', 'your_mysql_username', 'your_mysql_password', {
  host: 'localhost',
  dialect: 'mysql',
});

// Import the User model
const User = require('./models/user')(sequelize);

// Secret key for JWT
const secretKey = 'your_secret_key';

// Register a new user
app.post('/register', async (req, res) => {
  const { username, password } = req.body;

  if (!username || !password) {
    return res.status(400).json({ error: 'Username and password are required' });
  }

  try {
    const user = await User.create({ username, password });
    res.json({ message: 'User registered successfully' });
  } catch (error) {
    console.error('Sequelize error:', error);
    res.status(500).json({ error: 'Registration failed' });
  }
});

// Authenticate and generate JWT token
app.post('/login', async (req, res) => {
  const { username, password } = req.body;

  if (!username || !password) {
    return res.status(400).json({ error: 'Username and password are required' });
  }

  try {
    const user = await User.findOne({ where: { username, password } });

    if (!user) {
      return res.status(401).json({ error: 'Invalid username or password' });
    }

    const token = jwt.sign({ username }, secretKey, { expiresIn: '1h' });
    res.json({ token });
  } catch (error) {
    console.error('Sequelize error:', error);
    res.status(500).json({ error: 'Authentication failed' });
  }
});

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});
